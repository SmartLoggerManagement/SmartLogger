group 'SmartLogger'
version '1.0-SNAPSHOT'

apply plugin: 'scala'    // Add test task

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' } // Use to call github project.
}

dependencies {
    // Scala and scalatest libraries
    compile 'org.scala-lang:scala-library:2.11'

    // compile group: 'org.mockito', name: 'mockito-all', version: '1.8.4' // USELESS

    // Spark library
    compile 'org.apache.spark:spark-core_2.11:2.1.0'
    compile 'org.apache.spark:spark-mllib_2.11:2.1.0'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.8.6'

    // Akka libraries
    compile 'com.typesafe.akka:akka-http-core_2.11:10.0.3'
    compile 'com.typesafe.akka:akka-http_2.11:10.0.3'

    // Mail library
    compile group: 'javax.mail', name: 'mail', version: '1.4.7'
    // https://mvnrepository.com/artifact/dumbster/dumbster
    compile group: 'dumbster', name: 'dumbster', version: '1.6'


    // JsonReaderFile
    compile 'com.github.SmartLoggerManagement:JsonReaderFile:v1.0.1'

    // LogGenerator
  //  compile 'com.github.SmartLoggerManagement:LogGenerator:1.1'


    // Test execution
    testCompile "org.scala-lang:scala-library:2.11"
    testCompile "org.scalatest:scalatest_2.11:3.0.1"
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.spark:spark-core_2.11:2.1.0'
    testCompile 'org.apache.spark:spark-mllib_2.11:2.1.0'
    testCompile group: 'com.fasterxml.jackson.module', name: 'jackson-module-scala_2.11', version: '2.8.6'

    testCompile 'com.typesafe.akka:akka-http-core_2.11:10.0.3'
    testCompile 'com.typesafe.akka:akka-http_2.11:10.0.3'

    // Mail library
    testCompile group: 'javax.mail', name: 'mail', version: '1.4.7'
    testCompile group: 'com.icegreen', name: 'greenmail', version: '1.5.3'  // GreenMail to test mail output.
}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala/ML', 'src/main/scala/io/','src/main/scala/' ]
        }
    }
    test {
        scala {
            srcDirs = ['src/test/scala/IAnalysor',
                       'src/test/scala/io/input',
                       'src/test/scala/main'
                       'src/test/scala/io/output/mail'
                       //'src/test/scala/benchmark'
            ]
        }
    }
}

task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

task listJars {
    doLast {
        configurations.compile.each { File file -> println file.name }
    }
}
